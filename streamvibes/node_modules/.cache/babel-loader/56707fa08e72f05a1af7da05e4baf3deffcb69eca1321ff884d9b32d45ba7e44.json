{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rohan\\\\OneDrive\\\\Documents\\\\WT-Live streamer\\\\New\\\\streamvibes\\\\src\\\\Pages\\\\Viewer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Viewer = () => {\n  _s();\n  const [roomId, setRoomId] = useState('');\n  const videoRef = useRef(null);\n  const ws = useRef(null);\n  const mediaSource = useRef(null);\n  const connectToStream = () => {\n    if (!roomId) {\n      alert('Enter a room ID!');\n      return;\n    }\n    const status = document.getElementById('status');\n    const videoElement = document.getElementById('video');\n    ws.current = new WebSocket('wss://final-5sjc.onrender.com'); // Update to 'wss://' for secure context\n    mediaSource.current = new MediaSource();\n    videoElement.src = URL.createObjectURL(mediaSource.current);\n    ws.current.onopen = () => {\n      status.textContent = 'Connected to server as viewer';\n      ws.current.send(JSON.stringify({\n        type: 'viewer',\n        roomId\n      }));\n    };\n    mediaSource.current.addEventListener('sourceopen', () => {\n      const sourceBuffer = mediaSource.current.addSourceBuffer('video/webm; codecs=vp8');\n      ws.current.onmessage = event => {\n        if (typeof event.data === 'string') {\n          const message = JSON.parse(event.data);\n          if (message.type === 'no-stream') {\n            status.textContent = 'No active stream';\n          } else if (message.type === 'end-stream') {\n            status.textContent = 'Stream ended';\n            mediaSource.current.endOfStream();\n          }\n        } else if (event.data instanceof Blob || event.data instanceof ArrayBuffer) {\n          const reader = new FileReader();\n          reader.onload = () => {\n            const arrayBuffer = reader.result;\n            if (!sourceBuffer.updating) {\n              sourceBuffer.appendBuffer(new Uint8Array(arrayBuffer));\n            }\n          };\n          reader.readAsArrayBuffer(event.data);\n        }\n      };\n      sourceBuffer.addEventListener('error', e => {\n        console.error('SourceBuffer Error:', e);\n        status.textContent = 'Error in buffering stream';\n      });\n    });\n    ws.current.onerror = () => {\n      status.textContent = 'WebSocket error occurred';\n    };\n    ws.current.onclose = () => {\n      status.textContent = 'Disconnected from server';\n    };\n  };\n  useEffect(() => {\n    return () => {\n      if (ws.current) {\n        ws.current.close();\n      }\n      if (mediaSource.current) {\n        mediaSource.current = null;\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Viewer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter Room ID\",\n      value: roomId,\n      onChange: e => setRoomId(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectToStream,\n      children: \"Connect to Stream\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      id: \"video\",\n      ref: videoRef,\n      autoPlay: true,\n      playsInline: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"status\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(Viewer, \"LFO+NuG7omlt2n1bOPsLNk1uI4E=\");\n_c = Viewer;\nexport default Viewer;\nvar _c;\n$RefreshReg$(_c, \"Viewer\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","Viewer","_s","roomId","setRoomId","videoRef","ws","mediaSource","connectToStream","alert","status","document","getElementById","videoElement","current","WebSocket","MediaSource","src","URL","createObjectURL","onopen","textContent","send","JSON","stringify","type","addEventListener","sourceBuffer","addSourceBuffer","onmessage","event","data","message","parse","endOfStream","Blob","ArrayBuffer","reader","FileReader","onload","arrayBuffer","result","updating","appendBuffer","Uint8Array","readAsArrayBuffer","e","console","error","onerror","onclose","close","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","target","onClick","id","ref","autoPlay","playsInline","_c","$RefreshReg$"],"sources":["C:/Users/rohan/OneDrive/Documents/WT-Live streamer/New/streamvibes/src/Pages/Viewer.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport \"./styles.css\";\r\n\r\nconst Viewer = () => {\r\n  const [roomId, setRoomId] = useState('');\r\n  const videoRef = useRef(null);\r\n  const ws = useRef(null);\r\n  const mediaSource = useRef(null);\r\n\r\n  const connectToStream = () => {\r\n    if (!roomId) {\r\n      alert('Enter a room ID!');\r\n      return;\r\n    }\r\n\r\n    const status = document.getElementById('status');\r\n    const videoElement = document.getElementById('video');\r\n    ws.current = new WebSocket('wss://final-5sjc.onrender.com'); // Update to 'wss://' for secure context\r\n    mediaSource.current = new MediaSource();\r\n    videoElement.src = URL.createObjectURL(mediaSource.current);\r\n\r\n    ws.current.onopen = () => {\r\n      status.textContent = 'Connected to server as viewer';\r\n      ws.current.send(JSON.stringify({ type: 'viewer', roomId }));\r\n    };\r\n\r\n    mediaSource.current.addEventListener('sourceopen', () => {\r\n      const sourceBuffer = mediaSource.current.addSourceBuffer('video/webm; codecs=vp8');\r\n\r\n      ws.current.onmessage = (event) => {\r\n        if (typeof event.data === 'string') {\r\n          const message = JSON.parse(event.data);\r\n\r\n          if (message.type === 'no-stream') {\r\n            status.textContent = 'No active stream';\r\n          } else if (message.type === 'end-stream') {\r\n            status.textContent = 'Stream ended';\r\n            mediaSource.current.endOfStream();\r\n          }\r\n        } else if (event.data instanceof Blob || event.data instanceof ArrayBuffer) {\r\n          const reader = new FileReader();\r\n          reader.onload = () => {\r\n            const arrayBuffer = reader.result;\r\n            if (!sourceBuffer.updating) {\r\n              sourceBuffer.appendBuffer(new Uint8Array(arrayBuffer));\r\n            }\r\n          };\r\n          reader.readAsArrayBuffer(event.data);\r\n        }\r\n      };\r\n\r\n      sourceBuffer.addEventListener('error', (e) => {\r\n        console.error('SourceBuffer Error:', e);\r\n        status.textContent = 'Error in buffering stream';\r\n      });\r\n    });\r\n\r\n    ws.current.onerror = () => {\r\n      status.textContent = 'WebSocket error occurred';\r\n    };\r\n\r\n    ws.current.onclose = () => {\r\n      status.textContent = 'Disconnected from server';\r\n    };\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (ws.current) {\r\n        ws.current.close();\r\n      }\r\n      if (mediaSource.current) {\r\n        mediaSource.current = null;\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Viewer</h1>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Enter Room ID\"\r\n        value={roomId}\r\n        onChange={(e) => setRoomId(e.target.value)}\r\n      />\r\n      <button onClick={connectToStream}>Connect to Stream</button>\r\n      <video id=\"video\" ref={videoRef} autoPlay playsInline />\r\n      <p id=\"status\"></p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Viewer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}