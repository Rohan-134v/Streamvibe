{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rohan\\\\OneDrive\\\\Documents\\\\WT-Live streamer\\\\New\\\\streamvibes\\\\src\\\\Pages\\\\Streamer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [roomId, setRoomId] = useState('');\n  const [isStreaming, setIsStreaming] = useState(false);\n  const ws = useRef(null);\n  const mediaRecorder = useRef(null);\n  const startStream = () => {\n    if (!roomId) {\n      alert('Enter a room ID!');\n      return;\n    }\n    const status = document.getElementById('status');\n    ws.current = new WebSocket('wss://final-5sjc.onrender.com'); // Change to 'wss://' for secure WebSocket\n\n    ws.current.onopen = () => {\n      status.textContent = 'Connected to server as streamer';\n      ws.current.send(JSON.stringify({\n        type: 'streamer',\n        roomId\n      }));\n      setIsStreaming(true);\n    };\n    ws.current.onclose = () => {\n      status.textContent = 'Disconnected from server';\n      setIsStreaming(false);\n    };\n    ws.current.onerror = err => {\n      console.error('WebSocket error:', err);\n      status.textContent = 'WebSocket error occurred';\n      setIsStreaming(false);\n    };\n  };\n  const startSharing = async (getStreamFn, label) => {\n    const status = document.getElementById('status');\n    try {\n      const mediaStream = await getStreamFn();\n      status.textContent = `${label} started...`;\n      const videoTrack = mediaStream.getVideoTracks()[0];\n      mediaRecorder.current = new MediaRecorder(mediaStream, {\n        mimeType: 'video/webm; codecs=vp8'\n      });\n      mediaRecorder.current.ondataavailable = event => {\n        var _ws$current;\n        if (event.data.size > 0 && ((_ws$current = ws.current) === null || _ws$current === void 0 ? void 0 : _ws$current.readyState) === WebSocket.OPEN) {\n          ws.current.send(event.data);\n        }\n      };\n      mediaRecorder.current.start(100); // Send chunks every 100ms\n\n      videoTrack.onended = () => {\n        var _mediaRecorder$curren;\n        (_mediaRecorder$curren = mediaRecorder.current) === null || _mediaRecorder$curren === void 0 ? void 0 : _mediaRecorder$curren.stop();\n        status.textContent = `${label} ended`;\n      };\n    } catch (err) {\n      console.error(`Error starting ${label.toLowerCase()}:`, err);\n      status.textContent = `Failed to start ${label.toLowerCase()}`;\n    }\n  };\n  const startScreenSharing = () => {\n    startSharing(() => navigator.mediaDevices.getDisplayMedia({\n      video: true\n    }), 'Screen sharing');\n  };\n  const startCameraSharing = () => {\n    startSharing(() => navigator.mediaDevices.getUserMedia({\n      video: true\n    }), 'Camera sharing');\n  };\n  useEffect(() => {\n    return () => {\n      var _mediaRecorder$curren2, _ws$current2;\n      // Cleanup on component unmount\n      (_mediaRecorder$curren2 = mediaRecorder.current) === null || _mediaRecorder$curren2 === void 0 ? void 0 : _mediaRecorder$curren2.stop();\n      (_ws$current2 = ws.current) === null || _ws$current2 === void 0 ? void 0 : _ws$current2.close();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Streamer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter Room ID\",\n      value: roomId,\n      onChange: e => setRoomId(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startStream,\n      children: \"Start Streaming\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), isStreaming && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startScreenSharing,\n        children: \"Start Screen Share\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startCameraSharing,\n        children: \"Start Camera Share\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"status\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"aQ39wBQppLoje0VCf3E+8ix2mm0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","App","_s","roomId","setRoomId","isStreaming","setIsStreaming","ws","mediaRecorder","startStream","alert","status","document","getElementById","current","WebSocket","onopen","textContent","send","JSON","stringify","type","onclose","onerror","err","console","error","startSharing","getStreamFn","label","mediaStream","videoTrack","getVideoTracks","MediaRecorder","mimeType","ondataavailable","event","_ws$current","data","size","readyState","OPEN","start","onended","_mediaRecorder$curren","stop","toLowerCase","startScreenSharing","navigator","mediaDevices","getDisplayMedia","video","startCameraSharing","getUserMedia","_mediaRecorder$curren2","_ws$current2","close","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","onClick","id","_c","$RefreshReg$"],"sources":["C:/Users/rohan/OneDrive/Documents/WT-Live streamer/New/streamvibes/src/Pages/Streamer.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport \"./styles.css\";\r\n\r\nconst App = () => {\r\n  const [roomId, setRoomId] = useState('');\r\n  const [isStreaming, setIsStreaming] = useState(false);\r\n  const ws = useRef(null);\r\n  const mediaRecorder = useRef(null);\r\n\r\n  const startStream = () => {\r\n    if (!roomId) {\r\n      alert('Enter a room ID!');\r\n      return;\r\n    }\r\n\r\n    const status = document.getElementById('status');\r\n    ws.current = new WebSocket('wss://final-5sjc.onrender.com'); // Change to 'wss://' for secure WebSocket\r\n\r\n    ws.current.onopen = () => {\r\n      status.textContent = 'Connected to server as streamer';\r\n      ws.current.send(JSON.stringify({ type: 'streamer', roomId }));\r\n      setIsStreaming(true);\r\n    };\r\n\r\n    ws.current.onclose = () => {\r\n      status.textContent = 'Disconnected from server';\r\n      setIsStreaming(false);\r\n    };\r\n\r\n    ws.current.onerror = (err) => {\r\n      console.error('WebSocket error:', err);\r\n      status.textContent = 'WebSocket error occurred';\r\n      setIsStreaming(false);\r\n    };\r\n  };\r\n\r\n  const startSharing = async (getStreamFn, label) => {\r\n    const status = document.getElementById('status');\r\n    try {\r\n      const mediaStream = await getStreamFn();\r\n      status.textContent = `${label} started...`;\r\n\r\n      const videoTrack = mediaStream.getVideoTracks()[0];\r\n      mediaRecorder.current = new MediaRecorder(mediaStream, {\r\n        mimeType: 'video/webm; codecs=vp8',\r\n      });\r\n\r\n      mediaRecorder.current.ondataavailable = (event) => {\r\n        if (event.data.size > 0 && ws.current?.readyState === WebSocket.OPEN) {\r\n          ws.current.send(event.data);\r\n        }\r\n      };\r\n\r\n      mediaRecorder.current.start(100); // Send chunks every 100ms\r\n\r\n      videoTrack.onended = () => {\r\n        mediaRecorder.current?.stop();\r\n        status.textContent = `${label} ended`;\r\n      };\r\n    } catch (err) {\r\n      console.error(`Error starting ${label.toLowerCase()}:`, err);\r\n      status.textContent = `Failed to start ${label.toLowerCase()}`;\r\n    }\r\n  };\r\n\r\n  const startScreenSharing = () => {\r\n    startSharing(() => navigator.mediaDevices.getDisplayMedia({ video: true }), 'Screen sharing');\r\n  };\r\n\r\n  const startCameraSharing = () => {\r\n    startSharing(() => navigator.mediaDevices.getUserMedia({ video: true }), 'Camera sharing');\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      // Cleanup on component unmount\r\n      mediaRecorder.current?.stop();\r\n      ws.current?.close();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Streamer</h1>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Enter Room ID\"\r\n        value={roomId}\r\n        onChange={(e) => setRoomId(e.target.value)}\r\n      />\r\n      <button onClick={startStream}>Start Streaming</button>\r\n      {isStreaming && (\r\n        <div>\r\n          <button onClick={startScreenSharing}>Start Screen Share</button>\r\n          <button onClick={startCameraSharing}>Start Camera Share</button>\r\n        </div>\r\n      )}\r\n      <p id=\"status\"></p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAMW,EAAE,GAAGV,MAAM,CAAC,IAAI,CAAC;EACvB,MAAMW,aAAa,GAAGX,MAAM,CAAC,IAAI,CAAC;EAElC,MAAMY,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAI,CAACN,MAAM,EAAE;MACXO,KAAK,CAAC,kBAAkB,CAAC;MACzB;IACF;IAEA,MAAMC,MAAM,GAAGC,QAAQ,CAACC,cAAc,CAAC,QAAQ,CAAC;IAChDN,EAAE,CAACO,OAAO,GAAG,IAAIC,SAAS,CAAC,+BAA+B,CAAC,CAAC,CAAC;;IAE7DR,EAAE,CAACO,OAAO,CAACE,MAAM,GAAG,MAAM;MACxBL,MAAM,CAACM,WAAW,GAAG,iCAAiC;MACtDV,EAAE,CAACO,OAAO,CAACI,IAAI,CAACC,IAAI,CAACC,SAAS,CAAC;QAAEC,IAAI,EAAE,UAAU;QAAElB;MAAO,CAAC,CAAC,CAAC;MAC7DG,cAAc,CAAC,IAAI,CAAC;IACtB,CAAC;IAEDC,EAAE,CAACO,OAAO,CAACQ,OAAO,GAAG,MAAM;MACzBX,MAAM,CAACM,WAAW,GAAG,0BAA0B;MAC/CX,cAAc,CAAC,KAAK,CAAC;IACvB,CAAC;IAEDC,EAAE,CAACO,OAAO,CAACS,OAAO,GAAIC,GAAG,IAAK;MAC5BC,OAAO,CAACC,KAAK,CAAC,kBAAkB,EAAEF,GAAG,CAAC;MACtCb,MAAM,CAACM,WAAW,GAAG,0BAA0B;MAC/CX,cAAc,CAAC,KAAK,CAAC;IACvB,CAAC;EACH,CAAC;EAED,MAAMqB,YAAY,GAAG,MAAAA,CAAOC,WAAW,EAAEC,KAAK,KAAK;IACjD,MAAMlB,MAAM,GAAGC,QAAQ,CAACC,cAAc,CAAC,QAAQ,CAAC;IAChD,IAAI;MACF,MAAMiB,WAAW,GAAG,MAAMF,WAAW,CAAC,CAAC;MACvCjB,MAAM,CAACM,WAAW,GAAG,GAAGY,KAAK,aAAa;MAE1C,MAAME,UAAU,GAAGD,WAAW,CAACE,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;MAClDxB,aAAa,CAACM,OAAO,GAAG,IAAImB,aAAa,CAACH,WAAW,EAAE;QACrDI,QAAQ,EAAE;MACZ,CAAC,CAAC;MAEF1B,aAAa,CAACM,OAAO,CAACqB,eAAe,GAAIC,KAAK,IAAK;QAAA,IAAAC,WAAA;QACjD,IAAID,KAAK,CAACE,IAAI,CAACC,IAAI,GAAG,CAAC,IAAI,EAAAF,WAAA,GAAA9B,EAAE,CAACO,OAAO,cAAAuB,WAAA,uBAAVA,WAAA,CAAYG,UAAU,MAAKzB,SAAS,CAAC0B,IAAI,EAAE;UACpElC,EAAE,CAACO,OAAO,CAACI,IAAI,CAACkB,KAAK,CAACE,IAAI,CAAC;QAC7B;MACF,CAAC;MAED9B,aAAa,CAACM,OAAO,CAAC4B,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;MAElCX,UAAU,CAACY,OAAO,GAAG,MAAM;QAAA,IAAAC,qBAAA;QACzB,CAAAA,qBAAA,GAAApC,aAAa,CAACM,OAAO,cAAA8B,qBAAA,uBAArBA,qBAAA,CAAuBC,IAAI,CAAC,CAAC;QAC7BlC,MAAM,CAACM,WAAW,GAAG,GAAGY,KAAK,QAAQ;MACvC,CAAC;IACH,CAAC,CAAC,OAAOL,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,kBAAkBG,KAAK,CAACiB,WAAW,CAAC,CAAC,GAAG,EAAEtB,GAAG,CAAC;MAC5Db,MAAM,CAACM,WAAW,GAAG,mBAAmBY,KAAK,CAACiB,WAAW,CAAC,CAAC,EAAE;IAC/D;EACF,CAAC;EAED,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;IAC/BpB,YAAY,CAAC,MAAMqB,SAAS,CAACC,YAAY,CAACC,eAAe,CAAC;MAAEC,KAAK,EAAE;IAAK,CAAC,CAAC,EAAE,gBAAgB,CAAC;EAC/F,CAAC;EAED,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;IAC/BzB,YAAY,CAAC,MAAMqB,SAAS,CAACC,YAAY,CAACI,YAAY,CAAC;MAAEF,KAAK,EAAE;IAAK,CAAC,CAAC,EAAE,gBAAgB,CAAC;EAC5F,CAAC;EAEDrD,SAAS,CAAC,MAAM;IACd,OAAO,MAAM;MAAA,IAAAwD,sBAAA,EAAAC,YAAA;MACX;MACA,CAAAD,sBAAA,GAAA9C,aAAa,CAACM,OAAO,cAAAwC,sBAAA,uBAArBA,sBAAA,CAAuBT,IAAI,CAAC,CAAC;MAC7B,CAAAU,YAAA,GAAAhD,EAAE,CAACO,OAAO,cAAAyC,YAAA,uBAAVA,YAAA,CAAYC,KAAK,CAAC,CAAC;IACrB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACExD,OAAA;IAAAyD,QAAA,gBACEzD,OAAA;MAAAyD,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjB7D,OAAA;MACEqB,IAAI,EAAC,MAAM;MACXyC,WAAW,EAAC,eAAe;MAC3BC,KAAK,EAAE5D,MAAO;MACd6D,QAAQ,EAAGC,CAAC,IAAK7D,SAAS,CAAC6D,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,eACF7D,OAAA;MAAQmE,OAAO,EAAE1D,WAAY;MAAAgD,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACrDxD,WAAW,iBACVL,OAAA;MAAAyD,QAAA,gBACEzD,OAAA;QAAQmE,OAAO,EAAEpB,kBAAmB;QAAAU,QAAA,EAAC;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAChE7D,OAAA;QAAQmE,OAAO,EAAEf,kBAAmB;QAAAK,QAAA,EAAC;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7D,CACN,eACD7D,OAAA;MAAGoE,EAAE,EAAC;IAAQ;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChB,CAAC;AAEV,CAAC;AAAC3D,EAAA,CAjGID,GAAG;AAAAoE,EAAA,GAAHpE,GAAG;AAmGT,eAAeA,GAAG;AAAC,IAAAoE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}